name: main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    concurrency:
      group: ci-main-tests-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          environment-file: conda/dev.yaml
          channels: conda-forge,nodefaults
          activate-environment: pypkg
          auto-update-conda: true
          conda-solver: libmamba

      - name: Check poetry.lock
        run: poetry check

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: makim tests.unittest

      - name: Run style checks
        run: |
          pre-commit install
          makim tests.lint

      - name: Semantic Release PR Title Check
        uses: osl-incubator/semantic-release-pr-title-check@v1.4.3
        if: success() || failure()
        with:
          convention-name: conventionalcommits


  smoke-test:
    runs-on: ubuntu-latest
    concurrency:
      group: ci-main-smoke-${{ matrix.smoke_file }}-${{ github.ref }}
      cancel-in-progress: true

    strategy:
      matrix:
        smoke_file:
          - automation.sh
          - auto-format-tools.sh
          - build-systems.sh
          - containers.sh
          - docs.sh
          - files.sh
          - linters.sh
          - tests.sh
          - virtual-envs.sh

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          environment-file: conda/dev.yaml
          channels: conda-forge,nodefaults
          activate-environment: pypkg
          auto-update-conda: true
          conda-solver: libmamba

      - name: Install dependencies
        run: poetry install

      - name: Run Smoke Test (${{ matrix.smoke_file }})
        run: bash ./tests/smoke/${{ matrix.smoke_file }}
