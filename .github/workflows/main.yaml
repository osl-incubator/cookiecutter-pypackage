name: main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    concurrency:
      group: ci-main-tests-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v3

      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          mamba-version: "1.*"
          environment-file: conda/dev.yaml
          channels: conda-forge,nodefaults
          channel-priority: true
          activate-environment: pypkg
          use-mamba: true
          miniforge-variant: Mambaforge

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: makim tests.unittest

      - name: Run style checks
        run: |
          pre-commit install
          makim tests.lint

      - name: Semantic Release PR Title Check
        uses: osl-incubator/semantic-release-pr-title-check@v1.4.1
        if: success() || failure()
        with:
          convention-name: conventionalcommits


  smoke-test:
    runs-on: ubuntu-latest
    concurrency:
      group: ci-main-smoke-${{ matrix.smoke_file }}-${{ github.ref }}
      cancel-in-progress: true

    strategy:
      matrix:
        smoke_file:
          - jupyter-book.sh
          - mkdocs.sh
          - sphinx.sh
          - black.sh
          - blue.sh
          - coc.sh
          - governance.sh
          - roadmap.sh
          - build-system.sh

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v3

      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          mamba-version: "1.*"
          environment-file: conda/dev.yaml
          channels: conda-forge,nodefaults
          channel-priority: true
          activate-environment: pypkg
          use-mamba: true
          miniforge-variant: Mambaforge

      - name: Install dependencies
        run: poetry install

      - name: Run Smoke Test (${{ matrix.smoke_file }})
        run: bash ./tests/smoke/${{ matrix.smoke_file }}
