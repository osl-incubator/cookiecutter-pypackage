name: main

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CACHE_NUMBER: 0 # increase to reset cache manually

jobs:
  check-branch:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    timeout-minutes: 2
    concurrency:
      group: check-pr-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if the PR's branch is updated
        uses: osl-incubator/gh-check-pr-is-updated@1.0.0
        with:
          remote_branch: origin/main
          pr_sha: ${{ github.event.pull_request.head.sha }}

  tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        prefix:
          - /usr/share/miniconda3/envs/scicookie
          - /Users/runner/miniconda3/envs/scicookie
          - C:\Miniconda3\envs\scicookie

    runs-on: ${{ matrix.os }}

    concurrency:
      group: ci-main-tests-${{ matrix.os }}-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: scicookie
          use-mamba: true

      - name: Cache Conda environment
        uses: actions/cache@v2
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.os }}-conda-${{ hashFiles('conda/dev.yaml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update environment
        run: mamba env update -n scicookie -f conda/dev.yaml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install

      - name: Run tests
        if: ${{ matrix.os != 'windows' }}
        run: makim tests.unittest

      - name: Run tests
        if: ${{ matrix.os == 'windows' }}
        run: pytest -s -vv --template src/scicookie tests

  linter:
    runs-on: ubuntu-latest

    concurrency:
      group: ci-main-linter-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: scicookie
          use-mamba: true

      - name: Cache Conda environment
        uses: actions/cache@v2
        with:
          path: /usr/share/miniconda3/envs/scicookie
          key: ubuntu-64-conda-${{ hashFiles('conda/dev.yaml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update environment
        run: mamba env update -n scicookie -f conda/dev.yaml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install

      - name: Run style checks
        run: |
          pre-commit install
          makim tests.lint

  smoke-test:
    runs-on: ubuntu-latest
    concurrency:
      group: ci-main-smoke-${{ matrix.smoke_file }}-${{ github.ref }}
      cancel-in-progress: true

    strategy:
      matrix:
        smoke_file:
          - automation.sh
          - auto-format-tools.sh
          - build-systems.sh
          - containers.sh
          - docs.sh
          - files.sh
          - linters.sh
          - tests.sh
          - virtual-envs.sh
          - cli.sh

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: scicookie
          use-mamba: true

      - name: Cache Conda environment
        uses: actions/cache@v2
        with:
          path: /usr/share/miniconda3/envs/scicookie
          key: ubuntu-64-conda-${{ hashFiles('conda/dev.yaml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update environment
        run: mamba env update -n scicookie -f conda/dev.yaml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Install dependencies
        run: poetry install

      - name: Run Smoke Test (${{ matrix.smoke_file }})
        run: bash ./tests/smoke/${{ matrix.smoke_file }}
