version: 1.0
groups:
  clean:
    targets:
      tmp:
        help: Clean unnecessary temporary files
        shell: bash
        run: |
          rm -fr build/
          rm -fr dist/
          rm -fr .eggs/
          rm -f .coverage
          rm -fr htmlcov/
          rm -fr .pytest_cache
          find . -name '*.egg-info' -exec rm -fr {} +
          find . -name '*.egg' -exec rm -f {} +
          find . -name '*.pyc' -exec rm -f {} +
          find . -name '*.pyo' -exec rm -f {} +
          find . -name '__pycache__' -exec rm -fr {} +
          find . -name '*~' -exec rm -f {} +

  docs:
    targets:
      build:
        help: Build documentation
        run: |
          rm -rf docs/_build
          mkdocs build

      preview:
        help: Preview documentation page locally
        run: mkdocs serve --watch docs --config-file mkdocs.yaml

  release:
    vars:
      app: |
        npx --yes \
        -p semantic-release \
        -p "@semantic-release/commit-analyzer" \
        -p "@semantic-release/release-notes-generator" \
        -p "@semantic-release/changelog" \
        -p "@semantic-release/exec" \
        -p "@semantic-release/github" \
        -p "@semantic-release/git" \
        -p "@google/semantic-release-replace-plugin" \
        semantic-release

    targets:
      dry:
        help: Run semantic release in dry-run mode
        run: ${{ vars.app }} --dry-run
      ci:
        help: Run semantic release in dry-run mode
        run: ${{ vars.app }} --ci

  tests:
    targets:
      lint:
        help: Run linter tools
        run: pre-commit run --all-files --verbose

      unittest:
        help: Run tests
        run: pytest -s -vv --template src/scicookie tests

      smoke:
        help: Run smoke tests
        run: |
          ./tests/smoke/auto-format-tools.sh
          ./tests/smoke/build-systems.sh
          ./tests/smoke/cli.sh
          ./tests/smoke/containers.sh
          ./tests/smoke/docs.sh
          ./tests/smoke/files.sh
          ./tests/smoke/linters.sh
          ./tests/smoke/tests.sh
          ./tests/smoke/virtual-envs.sh
